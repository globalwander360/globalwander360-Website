Absolutely! Here's a more attractive and modern SCSS version for your login.component.scss, using soft shadows, gradient background, rounded corners, and subtle hover effects — all while keeping responsiveness in mind:


---

Updated login.component.scss

.login-container {
  max-width: 400px;
  margin: 80px auto;
  padding: 30px 40px;
  background: #ffffff;
  border-radius: 16px;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;

  h2 {
    text-align: center;
    margin-bottom: 24px;
    color: #2c3e50;
  }

  form {
    display: flex;
    flex-direction: column;
  }

  input {
    margin-bottom: 16px;
    padding: 12px 16px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 10px;
    transition: 0.3s ease;

    &:focus {
      border-color: #4a90e2;
      outline: none;
      box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.2);
    }
  }

  button[type='submit'] {
    background: linear-gradient(to right, #4a90e2, #357ABD);
    color: white;
    border: none;
    padding: 12px 0;
    border-radius: 10px;
    font-weight: bold;
    font-size: 16px;
    cursor: pointer;
    transition: background 0.3s ease;

    &:hover {
      background: linear-gradient(to right, #357ABD, #2c5aa0);
    }
  }

  .error-message {
    color: #e74c3c;
    margin-top: 10px;
    text-align: center;
    font-weight: 500;
  }

  button:last-child {
    background: none;
    color: #357ABD;
    border: none;
    margin-top: 16px;
    font-size: 14px;
    cursor: pointer;

    &:hover {
      text-decoration: underline;
    }
  }
}


---

This SCSS style will give your login form a clean, modern look that works well on both desktop and mobile.

Would you like a dark theme version too? Or shall I continue with register.component.ts/html/scss next?

Here’s an attractive and cohesive SCSS for your register page that matches and complements the login page style:


---

auth/register/register.component.scss

.register-container {
  max-width: 400px;
  margin: 60px auto;
  padding: 30px;
  background-color: #ffffff;
  border-radius: 12px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  text-align: center;

  h2 {
    margin-bottom: 20px;
    font-size: 28px;
    color: #333;
  }

  form {
    display: flex;
    flex-direction: column;

    input,
    select {
      margin: 10px 0;
      padding: 12px;
      border: 1px solid #ccc;
      border-radius: 8px;
      font-size: 16px;
      transition: border 0.3s;

      &:focus {
        border-color: #3f51b5;
        outline: none;
      }
    }

    button[type='submit'] {
      margin-top: 20px;
      padding: 12px;
      background-color: #3f51b5;
      color: white;
      font-weight: 600;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: background-color 0.3s;

      &:hover {
        background-color: #303f9f;
      }
    }

    .error-message {
      color: red;
      margin-top: 10px;
      font-size: 14px;
    }
  }

  button:not([type='submit']) {
    margin-top: 20px;
    background: none;
    border: none;
    color: #3f51b5;
    font-size: 14px;
    cursor: pointer;

    &:hover {
      text-decoration: underline;
    }
  }
}


---

This design includes:

Soft shadows and rounded corners for a clean card look

Stylish button with hover effects

Input fields styled similarly to login for design consistency


Let me know if you want to apply a background image or gradient for the whole page or continue with the .ts logic next!



