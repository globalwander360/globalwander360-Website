src/
└── main/
    ├── java/com/example/inventory/
    │   ├── controller/
    │   │   ├── GoodsController.java
    │   │   └── CategoryController.java
    │   ├── dto/
    │   │   ├── GoodsDTO.java
    │   │   └── CategoryDTO.java
    │   ├── entity/
    │   │   ├── Goods.java
    │   │   └── Category.java
    │   ├── mapper/
    │   │   ├── GoodsMapper.java
    │   │   └── CategoryMapper.java
    │   ├── repository/
    │   │   ├── GoodsRepository.java
    │   │   └── CategoryRepository.java
    │   ├── service/
    │   │   ├── GoodsService.java
    │   │   └── CategoryService.java
    │   └── InventoryManagementApplication.java
    └── test/
        └── java/com/example/inventory/
            └── service/
                └── GoodsServiceTest.java


// GoodsRepository.java
package com.example.inventory.repository;

import com.example.inventory.entity.Goods;
import org.springframework.data.jpa.repository.JpaRepository;

public interface GoodsRepository extends JpaRepository<Goods, Long> {
}

// CategoryRepository.java
package com.example.inventory.repository;

import com.example.inventory.entity.Category;
import org.springframework.data.jpa.repository.JpaRepository;

public interface CategoryRepository extends JpaRepository<Category, Long> {
}


// GoodsDTO.java
package com.example.inventory.dto;

import lombok.Data;
import java.util.Date;

@Data
public class GoodsDTO {
    private Long id;
    private String name;
    private Integer quantity;
    private String unitOfMeasure;
    private String location;
    private Date expiryDate;
    private Date acquisitionDate;
    private Integer minimumStockLevel;
    private Double price;
    private String supplier;
    private String status;
    private Long userId;
    private Long categoryId;
}



// GoodsMapper.java
package com.example.inventory.mapper;

import com.example.inventory.dto.GoodsDTO;
import com.example.inventory.entity.Goods;
import org.springframework.stereotype.Component;

@Component
public class GoodsMapper {
    public GoodsDTO toDto(Goods goods) {
        GoodsDTO dto = new GoodsDTO();
        dto.setId(goods.getId());
        dto.setName(goods.getName());
        dto.setQuantity(goods.getQuantity());
        dto.setUnitOfMeasure(goods.getUnitOfMeasure());
        dto.setLocation(goods.getLocation());
        dto.setExpiryDate(goods.getExpiryDate());
        dto.setAcquisitionDate(goods.getAcquisitionDate());
        dto.setMinimumStockLevel(goods.getMinimumStockLevel());
        dto.setPrice(goods.getPrice());
        dto.setSupplier(goods.getSupplier());
        dto.setStatus(goods.getStatus());
        dto.setUserId(goods.getUser().getId());
        dto.setCategoryId(goods.getCategory().getId());
        return dto;
    }

    public Goods toEntity(GoodsDTO dto) {
        Goods goods = new Goods();
        goods.setId(dto.getId());
        goods.setName(dto.getName());
        goods.setQuantity(dto.getQuantity());
        goods.setUnitOfMeasure(dto.getUnitOfMeasure());
        goods.setLocation(dto.getLocation());
        goods.setExpiryDate(dto.getExpiryDate());
        goods.setAcquisitionDate(dto.getAcquisitionDate());
        goods.setMinimumStockLevel(dto.getMinimumStockLevel());
        goods.setPrice(dto.getPrice());
        goods.setSupplier(dto.getSupplier());
        goods.setStatus(dto.getStatus());
        return goods;
    }
}




// CategoryDTO.java
package com.example.inventory.dto;

import lombok.Data;

@Data
public class CategoryDTO {
    private Long id;
    private String name;
    private String description;
    private String storageRequirements;
    private Boolean isPerishable;
    private Integer shelfLife;
}


// GoodsService.java
package com.example.inventory.service;

import com.example.inventory.dto.GoodsDTO;
import com.example.inventory.entity.Category;
import com.example.inventory.entity.Goods;
import com.example.inventory.entity.User;
import com.example.inventory.mapper.GoodsMapper;
import com.example.inventory.repository.CategoryRepository;
import com.example.inventory.repository.GoodsRepository;
import com.example.inventory.repository.UserRepository;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.stream.Collectors;

@Service
public class GoodsService {
    private final GoodsRepository goodsRepository;
    private final CategoryRepository categoryRepository;
    private final UserRepository userRepository;
    private final GoodsMapper goodsMapper;

    public GoodsService(GoodsRepository goodsRepository, CategoryRepository categoryRepository, UserRepository userRepository, GoodsMapper goodsMapper) {
        this.goodsRepository = goodsRepository;
        this.categoryRepository = categoryRepository;
        this.userRepository = userRepository;
        this.goodsMapper = goodsMapper;
    }

    public List<GoodsDTO> getAllGoods() {
        return goodsRepository.findAll().stream()
                .map(goodsMapper::toDto)
                .collect(Collectors.toList());
    }

    public GoodsDTO createGoods(GoodsDTO dto) {
        Goods goods = goodsMapper.toEntity(dto);
        goods.setCategory(categoryRepository.findById(dto.getCategoryId()).orElseThrow());
        goods.setUser(userRepository.findById(dto.getUserId()).orElseThrow());
        return goodsMapper.toDto(goodsRepository.save(goods));
    }
}



// GoodsController.java
package com.example.inventory.controller;

import com.example.inventory.dto.GoodsDTO;
import com.example.inventory.service.GoodsService;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/goods")
public class GoodsController {

    private final GoodsService goodsService;

    public GoodsController(GoodsService goodsService) {
        this.goodsService = goodsService;
    }

    @GetMapping
    public List<GoodsDTO> getAllGoods() {
        return goodsService.getAllGoods();
    }

    @PostMapping
    public GoodsDTO createGoods(@RequestBody GoodsDTO dto) {
        return goodsService.createGoods(dto);
    }
}



// GoodsServiceTest.java
package com.example.inventory.service;

import com.example.inventory.dto.GoodsDTO;
import com.example.inventory.entity.Category;
import com.example.inventory.entity.Goods;
import com.example.inventory.entity.User;
import com.example.inventory.mapper.GoodsMapper;
import com.example.inventory.repository.CategoryRepository;
import com.example.inventory.repository.GoodsRepository;
import com.example.inventory.repository.UserRepository;
import org.junit.jupiter.api.Test;
import org.mockito.Mockito;

import java.util.Optional;

import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

class GoodsServiceTest {

    @Test
    void testCreateGoods() {
        GoodsRepository goodsRepository = mock(GoodsRepository.class);
        CategoryRepository categoryRepository = mock(CategoryRepository.class);
        UserRepository userRepository = mock(UserRepository.class);
        GoodsMapper goodsMapper = new GoodsMapper();

        GoodsService service = new GoodsService(goodsRepository, categoryRepository, userRepository, goodsMapper);

        GoodsDTO dto = new GoodsDTO();
        dto.setName("Apple");
        dto.setQuantity(100);
        dto.setCategoryId(1L);
        dto.setUserId(1L);

        Category category = new Category();
        category.setId(1L);
        User user = new User();
        user.setId(1L);

        when(categoryRepository.findById(1L)).thenReturn(Optional.of(category));
        when(userRepository.findById(1L)).thenReturn(Optional.of(user));
        when(goodsRepository.save(any())).thenAnswer(i -> i.getArgument(0));

        GoodsDTO saved = service.createGoods(dto);
        assertEquals("Apple", saved.getName());
    }
}








