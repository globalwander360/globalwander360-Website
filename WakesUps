Great to hear that your code is running smoothly! To enhance your login page with an attractive and modern design using SCSS, here's a stylish example you can integrate into your Angular project:


---

‚ú® Stylish SCSS Login Page Design

üñºÔ∏è Preview



Inspired by the Responsive Beautiful Login Page Template.


---

üß© HTML Structure (login.component.html)

<div class="login-container">
  <form class="login-form">
    <h2>Welcome Back</h2>
    <div class="input-group">
      <label for="email">Email</label>
      <input type="email" id="email" name="email" required />
    </div>
    <div class="input-group">
      <label for="password">Password</label>
      <input type="password" id="password" name="password" required />
    </div>
    <button type="submit">Login</button>
    <p class="signup-link">Don't have an account? <a href="#">Sign Up</a></p>
  </form>
</div>


---

üé® SCSS Styling (login.component.scss)

.login-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background: linear-gradient(135deg, #74ebd5, #acb6e5);
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;

  .login-form {
    background: #ffffff;
    padding: 2rem 3rem;
    border-radius: 12px;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    width: 100%;
    max-width: 400px;

    h2 {
      text-align: center;
      margin-bottom: 1.5rem;
      color: #333;
    }

    .input-group {
      margin-bottom: 1rem;

      label {
        display: block;
        margin-bottom: 0.5rem;
        color: #555;
      }

      input {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ccc;
        border-radius: 8px;
        transition: border-color 0.3s;

        &:focus {
          border-color: #74ebd5;
          outline: none;
        }
      }
    }

    button {
      width: 100%;
      padding: 0.75rem;
      background-color: #74ebd5;
      border: none;
      border-radius: 8px;
      color: #fff;
      font-size: 1rem;
      cursor: pointer;
      transition: background-color 0.3s;

      &:hover {
        background-color: #67d8c2;
      }
    }

    .signup-link {
      text-align: center;
      margin-top: 1rem;
      color: #555;

      a {
        color: #74ebd5;
        text-decoration: none;

        &:hover {
          text-decoration: underline;
        }
      }
    }
  }
}


---

‚öôÔ∏è Integration Steps

1. Update HTML: Replace the content of your login.component.html with the provided HTML structure.


2. Apply SCSS: Copy the SCSS code into your login.component.scss file.


3. Ensure SCSS Compilation: Make sure your Angular project is set up to compile SCSS. If you initially created your project with SCSS support, this should already be configured.


4. Responsive Design: The provided styles are responsive. However, you can further enhance responsiveness by adding media queries as needed.




---

üîó Additional Resources

For more inspiration and ready-to-use login form templates, consider exploring the following resources:

35+ CSS Login Forms - FreeFrontend

42 Best Free HTML5 And CSS3 Login Forms 2025 - Colorlib

30+ Free Login & Registration Form Templates - CodingNepal



---

Feel free to customize the colors, fonts, and layout to better match your application's branding. If you need assistance with further customization or integrating additional features like "Remember Me" checkboxes or social login buttons, don't hesitate to ask!
